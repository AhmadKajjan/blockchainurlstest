{"version":3,"sources":["eosjsFunction/ApiService.js","eosjsFunction/ChainsID_Data.js","pages/testPage/testPage.compnents.jsx","redux/url/url.actions.js","redux/chains/chains.action.js","components/header/Header.components.jsx","components/showAllData/showAllData.components.jsx","App.js","redux/url/url.reducer.js","redux/chains/chains.reducer.js","redux/root-reducer.js","redux/store.js","serviceWorker.js","index.js"],"names":["a","rpc","JsonRpc","fetch","res","get_table_rows","json","code","scope","table","limit","reverse","show_payer","ApiService","getTablesInfo","eos","wax","telos","proton","fetchData","urls","chainsArray","key","value","i","length","url","charAt","substring","savedurl","p1","console","log","p2","undefined","Object","entries","chains","forEach","item","chainIDOfItem","values","jsonPath","l","used","elem","includes","type","push","ChainsId_Data","error","message","sort","b","total_votes","getDataResult","producerTable","x","TestPage","componentDidMount","get","then","props","setProducerTabel","rows","getListOFChainsProducers","setEosMainNet","setWaxMainNet","setTelosMainNet","setProtonMainNet","setProducerHaveChains","this","producerHaveChains","Alert","severity","CircularProgress","React","Component","connect","state","producer_Table","dispatch","producer_table","payload","producerhavechain","setProducerHaveBP","producerhavebp","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","link","textDecoration","margin","color","classes","className","AppBar","position","Toolbar","Typography","variant","to","ShowAllData","testfunc","nodes","urlData","child","apiUrl","replace","index","indexOf","substr","searchUrl","y","z","locationOnChainCountryCode","location","country","locationIpStackCountryCode","country_code","node_type","chaintype","chainArray","eos_mainnet","wax_mainnet","telos_mainnet","proton_mainnet","tostate","setState","chainState","Grid","container","map","xs","Paper","elevation","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","id","ans","ExpansionPanelDetails","App","exact","path","component","INITIAL_STATE","producerHaveBP","urlReducer","action","chainsReducer","combineReducers","middlewares","logger","store","createStore","rootReducer","applyMiddleware","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.771f487b.chunk.js","sourcesContent":["import {Api,JsonRpc,RpcError} from 'eosjs';\r\nimport {JsSignatureProvider} from 'eosjs/dist/eosjs-jssig';\r\n\r\n\r\n// async function takeAction (apiurl,action,contractaccount,actor,privatekey,datavalue)\r\n// {\r\n//     console.log(privatekey);\r\n//     const PrivateKey=privatekey;\r\n//     const rpc=new JsonRpc(apiurl,{fetch});\r\n//     const signatureProvider=new JsSignatureProvider([PrivateKey]);\r\n//     const api=new Api({rpc,signatureProvider,textDecoder :new TextDecoder(),textEncoder:new TextEncoder()});\r\n//     try{\r\n//         const resultWithConfig = await api.transact({\r\n//            actions:[{ \r\n//                 account:contractaccount,\r\n//                 name:action,\r\n//                 authorization: [{\r\n//                     actor:actor,\r\n//                      permission:'active',\r\n//                     }],\r\n//                     data:datavalue,\r\n//             }]},\r\n//             {\r\n//                 blocksBehind:3,\r\n//                 expireSeconds:30,\r\n//             });\r\n//             return resultWithConfig;\r\n//     }\r\n//     catch(e){\r\n//        return e;\r\n//     }\r\n// }\r\n\r\n// async function getAccountCurrency(api,contractaccount,accountName,symbol)\r\n//     {\r\n//         const rpc=new JsonRpc(api,{fetch});\r\n//         try{\r\n//             const res=rpc.get_currency_balance(contractaccount,accountName,symbol);\r\n//             return res;\r\n//         }\r\n//         catch(e){\r\n//             return e;\r\n//         }\r\n//     }\r\n\r\nasync function getTablesInfo()\r\n{\r\n    const rpc=new JsonRpc('https://eos.greymass.com',{fetch});\r\n        try{\r\n            const res=rpc.get_table_rows({\r\n                                        json:true,\r\n                                        code:'eosio',\r\n                                        scope:'eosio',\r\n                                        table:'producers',\r\n                                        limit:1000,\r\n                                        reverse:false,\r\n                                        show_payer:false});\r\n            return res;\r\n\r\n        }\r\n        catch(e){\r\n            return e;\r\n        }\r\n}\r\n\r\nclass ApiService{\r\n \r\n   static get(){\r\n       return getTablesInfo();\r\n   }\r\n} \r\n\r\nexport default ApiService;","export default   {\r\n    ChainsId_Data:{\r\n    eos:'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906',\r\n    wax:'1064487b3cd1a897ce03ae5b6a865651747e2e152090f99c1d19d44e01aea5a4',\r\n    telos:'4667b205c6838ef70ff7988f6e8257e8be0e1284a2f59699054a018f743b1d11',\r\n    proton:'384da888112027f0321850a169f737c33e53b388aad48b5adace4bab97f437e0',  \r\n    }\r\n};","import React from 'react';\r\nimport ApiService from '../../eosjsFunction/ApiService';\r\nimport {connect} from 'react-redux';\r\nimport ChainsId_Data from '../../eosjsFunction/ChainsID_Data';\r\nimport {setProducer_Tabel,setProducerHaveChains,setProducerHaveBP} from '../../redux/url/url.actions';\r\nimport {setEosMainNet,setTelosMainNet,setProtonMainNet,setWaxMainNet} from '../../redux/chains/chains.action';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress'; \r\nasync function fetchData(urls){\r\n    \r\n    var chainsArray = [];\r\n    var bpArray = [];\r\n    var x=[{key:'',value:''}];\r\n    for (let i = 0; i < urls.length; i++)   {\r\n     let res;\r\n     var savedurl;\r\n     var url=urls[i].url; \r\n        if(url===null)\r\n            continue;\r\n        if(url.charAt(url.length-1)==='/'){\r\n            url = url.substring(0, url.length - 1);\r\n        }\r\n        savedurl=url;\r\n         url+=\"/chains.json\";\r\n      try {\r\n        let p1 = await fetch(url);\r\n        console.log(p1);\r\n        let p2 = await p1.json();\r\n        res=p2;\r\n        if(res!==undefined&&res!==null)\r\n        {\r\n            Object.entries(res.chains).forEach(item=>{\r\n                var chainIDOfItem=Object.values(item)[0];\r\n                var jsonPath=Object.values(item)[1];\r\n                if(jsonPath.charAt(0)!=='/')\r\n                    jsonPath='/'+jsonPath; \r\n                var used=false;\r\n                chainsArray.forEach(elem=>{\r\n                        console.log(elem);\r\n                    if(Object.values(item)[0].includes(elem.type)){\r\n                      if(!elem.value.includes(savedurl+jsonPath))\r\n                        elem.value.push(savedurl+jsonPath);\r\n                        used=true;\r\n                    }\r\n                })\r\n                if(used===false)\r\n                {\r\n                    var l;\r\n                  \r\n                    if(chainIDOfItem.includes(ChainsId_Data.ChainsId_Data.eos)){\r\n                        l={\r\n                                type:ChainsId_Data.ChainsId_Data.eos,\r\n                            value:[savedurl+jsonPath,]\r\n                        }\r\n                    }\r\n                    else if(chainIDOfItem.includes(ChainsId_Data.ChainsId_Data.wax)){\r\n                        l={\r\n                                type:ChainsId_Data.ChainsId_Data.wax,\r\n                            value:[savedurl+jsonPath,]\r\n                        }\r\n                    }\r\n                    else if(chainIDOfItem.includes(ChainsId_Data.ChainsId_Data.telos)){\r\n                        l={\r\n                                type:ChainsId_Data.ChainsId_Data.telos,\r\n                            value:[savedurl+jsonPath,]\r\n                        }\r\n                    }\r\n                   else  if(chainIDOfItem.includes(ChainsId_Data.ChainsId_Data.proton)){\r\n                        l={\r\n                                type:ChainsId_Data.ChainsId_Data.proton,\r\n                            value:[savedurl+jsonPath,]\r\n                        }\r\n                    }\r\n                    else{\r\n                        l={\r\n                            type:'otherStuff',\r\n                        value:[savedurl+jsonPath,]\r\n                    }\r\n                    }\r\n                    chainsArray.push(l);\r\n                }\r\n            })\r\n        }\r\n   \r\n      }\r\n      catch (e) {\r\n        console.error(e.message);\r\n      }\r\n     url=urls[i].url; \r\n      if(url===null)\r\n          continue;\r\n          if(url.charAt(url.length-1)==='/')\r\n             url = url.substring(0, url.length - 1);\r\n          url+=\"/bp.json\";\r\n      try {\r\n        let p1 = await fetch(url);\r\n        let p2 = await p1.json();\r\n        res=p2;\r\n        if(res!==undefined&&res!==null)\r\n        {\r\n            chainsArray.forEach(elem=>{\r\n                if(elem.type===ChainsId_Data.ChainsId_Data.eos)\r\n                    if(!elem.value.includes(url))\r\n                        elem.value.push(url);     \r\n            })\r\n        }\r\n      }\r\n      catch (e) {\r\n        console.error(e.message);\r\n      }\r\n    };\r\n    chainsArray.sort(function (a,b) {\r\n        return b.total_votes-a.total_votes;\r\n    })\r\n    return ({\r\n        chains:chainsArray,\r\n    })\r\n  };\r\n  \r\nasync function  getDataResult(producerTable) {\r\n    const x=await fetchData(producerTable);\r\n    console.log(x);\r\n   return x;\r\n}\r\nclass TestPage extends React.Component\r\n{\r\n\r\n    componentDidMount=async()=>\r\n    {\r\n        await ApiService.get().then(res=>{this.props.setProducerTabel(res.rows);});\r\n        if(this.props.producerTable.length>0)\r\n            this.getListOFChainsProducers()\r\n    }\r\n  \r\n    getListOFChainsProducers=()=>{\r\n        console.log('test');\r\n        getDataResult(this.props.producerTable).then(res=>{\r\n            res.chains.forEach(elem=>{\r\n                if(elem.type===ChainsId_Data.ChainsId_Data.eos)\r\n                    this.props.setEosMainNet(elem.value);\r\n                else if(elem.type===ChainsId_Data.ChainsId_Data.wax)\r\n                    this.props.setWaxMainNet(elem.value);\r\n                else if(elem.type===ChainsId_Data.ChainsId_Data.telos)\r\n                    this.props.setTelosMainNet(elem.value);\r\n                else if(elem.type===ChainsId_Data.ChainsId_Data.proton)\r\n                    this.props.setProtonMainNet(elem.value);\r\n            })\r\n            this.props.setProducerHaveChains(res.chains);\r\n        });\r\n        \r\n    }\r\n    render()\r\n    {\r\n        return(\r\n                 <div>\r\n                  \r\n                    <div>\r\n                        chains:\r\n                    </div>\r\n                    <div>\r\n                    {\r\n                        \r\n                        this.props.producerHaveChains.length>0?\r\n                             <Alert severity=\"success\">Done</Alert>\r\n                             :\r\n                             <div>\r\n                                 <CircularProgress />\r\n                                <h4>please wait until the fetching data is done you can use or programs after you see success alert is done</h4>\r\n                            </div>\r\n                    }\r\n                    </div>\r\n                </div>\r\n         )\r\n    }\r\n}\r\nconst mapDispatchToProps=dispatch=>({\r\n    setProducerTabel:producer_table=>dispatch(setProducer_Tabel(producer_table)),\r\n    setProducerHaveChains:producerhavechain=>dispatch(setProducerHaveChains(producerhavechain)),\r\n    setProducerHaveBP:producerhavebp=>dispatch(setProducerHaveBP(producerhavebp)),\r\n    setEosMainNet:eos=>dispatch(setEosMainNet(eos)),\r\n    setWaxMainNet:wax=>dispatch(setWaxMainNet(wax)),\r\n    setTelosMainNet:telos=>dispatch(setTelosMainNet(telos)),\r\n    setProtonMainNet:proton=>dispatch(setProtonMainNet(proton)),\r\n})\r\nconst mapStateToProps=state=>({\r\n    producerTable:state.url.producer_Table,\r\n    producerHaveChains:state.url.producerHaveChains,\r\n}) \r\nexport default connect(mapStateToProps,mapDispatchToProps)(TestPage);","export const setProducer_Tabel = producer_tabel=>({\r\n    type:'Set_Producer_Table',\r\n    payload:producer_tabel\r\n})\r\n\r\nexport const setProducerHaveChains = producerhavechains=>({\r\n    type:'Set_ProducerHaveChains',\r\n    payload:producerhavechains\r\n})\r\nexport const setProducerHaveBP = producerhavebp=>({\r\n    type:'Set_ProducerHaveBP',\r\n    payload:producerhavebp\r\n})","export const setEosMainNet = eos=>({\r\n    type:'Set_Eos_MainNet',\r\n    payload:eos\r\n})\r\n\r\nexport const setWaxMainNet = wax=>({\r\n    type:'Set_Wax_MainNet',\r\n    payload:wax\r\n})\r\nexport const setTelosMainNet = telos=>({\r\n    type:'Set_Telos_MainNet',\r\n    payload:telos\r\n})\r\nexport const setProtonMainNet = proton=>({\r\n    type:'Set_proton_MainNet',\r\n    payload:proton\r\n})","\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect }from 'react-redux';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  link:{\r\n      textDecoration:'none',\r\n      margin:'10px 5px',\r\n      color:'white',\r\n  }\r\n}));\r\n\r\n const Header=({producerHaveChains})=> {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Eos-Arabia\r\n          </Typography>\r\n          {\r\n            producerHaveChains.length>0?\r\n            <div>\r\n              <Link to=\"/eos_mainnet\" className={classes.link}>EOS</Link>\r\n              <Link to=\"/wax_mainnet\" className={classes.link}>WAX</Link>\r\n              <Link to=\"/telos_mainnet\" className={classes.link}>TELOS</Link>\r\n              <Link to=\"/proton_mainnet\" className={classes.link}>PROTON</Link>\r\n            </div>  \r\n            :\r\n            null\r\n          }\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps=state=>({\r\n  producerHaveChains:state.url.producerHaveChains\r\n})\r\nexport default connect(mapStateToProps,null)(Header);","import  React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nclass ShowAllData extends React.Component{\r\n    \r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            chainState:[],\r\n        \r\n            }\r\n      }\r\n    testfunc=async(nodes)=>{\r\n        var urlData=[];\r\n        for await(const child of nodes)\r\n        {\r\n           \r\n        //3dd8454a89aa4b95b5727b5429b2f6e9//http://api.ipstack.com/134.201.250.155? access_key = YOUR_ACCESS_KEY\r\n          for await( const  elem of  Object.entries(child))\r\n            {\r\n                if((Object.values(elem)[0]==='api_endpoint'||Object.values(elem)[0]==='ssl_endpoint'||Object.values(elem)[0]==='p2p_endpoint')&&Object.values(elem)[1]!==\"\")\r\n                    {\r\n                        \r\n                        var apiUrl=Object.values(elem)[1];\r\n                        apiUrl=apiUrl.replace('https://','');\r\n                        apiUrl=apiUrl.replace('http://','');\r\n                        if(Object.values(elem)[0]==='p2p_endpoint'){\r\n                            const index=apiUrl.indexOf(':');\r\n                            apiUrl=apiUrl.substr(0,index);\r\n                        \r\n                        }\r\n                        const searchUrl='http://api.ipstack.com/'+apiUrl+'?access_key=3dd8454a89aa4b95b5727b5429b2f6e9';\r\n                        console.log(searchUrl);\r\n                        const y=await fetch(searchUrl);\r\n                        const z=await y.json();\r\n                        console.log(z);\r\n                        urlData=[...urlData,{\r\n                        locationOnChainCountryCode:child.location.country,\r\n                        locationIpStackCountryCode:z.country_code,\r\n                            node_type:child.node_type,\r\n                        }];\r\n                        \r\n                \r\n                }\r\n            }\r\n        }\r\n        console.log(urlData);\r\n        return(urlData);\r\n\r\n    }\r\n     componentDidMount=async()=>{\r\n        var chainArray;\r\n        if(this.props.chaintype===\"eos\")\r\n            chainArray=this.props.eos_mainnet;\r\n        else if(this.props.chaintype===\"wax\")\r\n            chainArray=this.props.wax_mainnet;\r\n        else if(this.props.chaintype===\"telos\")\r\n            chainArray=this.props.telos_mainnet;\r\n        else if(this.props.chaintype===\"proton\")\r\n            chainArray=this.props.proton_mainnet;\r\n        var tostate=[];\r\n        console.log(chainArray);\r\n        for await(const url of chainArray){\r\n            try{\r\n            const x= await fetch(url);\r\n            const p1=await x.json();      \r\n            try{\r\n                \r\n                const urlData=await this.testfunc(p1.nodes);\r\n                console.log(urlData);\r\n                tostate=[...tostate,{url:url,res:urlData}];\r\n\r\n            } \r\n                catch(err)\r\n                {\r\n                            console.log(err);\r\n                }\r\n              \r\n            }   \r\n            catch(err){\r\n                console.log(err);\r\n            }\r\n            \r\n        }\r\n     \r\n             this.setState({...this.state,chainState:tostate});    \r\n        \r\n    }\r\n\r\n render(){\r\n    return  (\r\n                this.state.chainState.length===0?\r\n                 <div>\r\n                    <CircularProgress />\r\n                    <h4>please wait until the compering  data is done </h4>\r\n                </div>:\r\n                <div>{\r\n                 <Grid container spacing={3}>{\r\n                    this.state.chainState.map(elem=>{\r\n                        return <Grid item xs={4}>\r\n                                     <Paper elevation={3}>\r\n                                        <ExpansionPanel>\r\n                                            <ExpansionPanelSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-controls={elem.url}\r\n                                            id={elem.url}\r\n                                            >\r\n                                            <Typography>{elem.url}</Typography>\r\n                                            </ExpansionPanelSummary>\r\n                                                    {\r\n                                                        elem.res.map(ans=>{\r\n                                                            return <div>\r\n                                                 <ExpansionPanelDetails>\r\n                                                                    <h5>{ans.node_type}</h5>\r\n                                                                    {\r\n                                                                        ans.locationOnChainCountryCode===ans.locationIpStackCountryCode?\r\n                                                                        <Alert severity=\"success\">producer honest in this</Alert>\r\n                                                                    :\r\n                                                                        <Alert severity=\"error\">producer lied in this</Alert>\r\n                                                                    }\r\n\r\n                                                </ExpansionPanelDetails>\r\n                                                                </div>\r\n                                                         })\r\n                                                    }\r\n                                        </ExpansionPanel>     \r\n                                    </Paper>   \r\n                             </Grid>\r\n                    })\r\n            }\r\n               </Grid>\r\n                }\r\n                </div>\r\n        )\r\n }\r\n\r\n}\r\nconst mapStateToProps=state=>({\r\n    eos_mainnet:state.chains.eos_mainnet,\r\n    wax_mainnet:state.chains.wax_mainnet,\r\n    telos_mainnet:state.chains.telos_mainnet,\r\n    proton_mainnet:state.chains.proton_mainnet,\r\n})\r\n\r\nexport default connect(mapStateToProps,null)(ShowAllData);","import React from 'react';\nimport TestPage from './pages/testPage/testPage.compnents';\nimport Header from './components/header/Header.components';\nimport {Switch,Route} from 'react-router-dom';\nimport ShowAllData from './components/showAllData/showAllData.components';\nfunction App() {\n  \n \n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path='/' component={TestPage} />\n        <Route exact path='/eos_mainnet' component={()=><ShowAllData chaintype=\"eos\" /> } />\n        <Route exact path='/wax_mainnet' component={()=><ShowAllData chaintype=\"wax\" /> } />\n        <Route exact path='/telos_mainnet' component={()=><ShowAllData chaintype=\"telos\" /> } />\n        <Route exact path='/proton_mainnet' component={()=><ShowAllData chaintype=\"proton\" /> } />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const INITIAL_STATE={\r\n    producer_Table:[],\r\n    producerHaveChains:[],\r\n    producerHaveBP:[],\r\n}\r\n\r\nconst urlReducer=(state=INITIAL_STATE,action)=>{\r\n    switch(action.type)\r\n    {\r\n        case 'Set_Producer_Table':\r\n            return{\r\n                ...state,\r\n                producer_Table:action.payload\r\n            }\r\n         case 'Set_ProducerHaveChains':\r\n                return{\r\n                    ...state,\r\n                    producerHaveChains:action.payload\r\n                }\r\n        case 'Set_ProducerHaveBP':\r\n                return{\r\n                    ...state,\r\n                    producerHaveBP:action.payload\r\n                }               \r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default urlReducer; ","const INITIAL_STATE={\r\n    eos_mainnet:[],\r\n    wax_mainnet:[],\r\n    telos_mainnet:[],\r\n    proton_mainnet:[],\r\n}\r\n\r\nconst chainsReducer=(state=INITIAL_STATE,action)=>{\r\n    switch(action.type)\r\n    {\r\n        case 'Set_Eos_MainNet':\r\n            return{\r\n                ...state,\r\n                eos_mainnet:action.payload\r\n            }\r\n         case 'Set_Wax_MainNet':\r\n                return{\r\n                    ...state,\r\n                    wax_mainnet:action.payload\r\n                }\r\n        case 'Set_Telos_MainNet':\r\n                return{\r\n                    ...state,\r\n                    telos_mainnet:action.payload\r\n                }     \r\n        case 'Set_proton_MainNet':\r\n                return{\r\n                    ...state,\r\n                    proton_mainnet:action.payload\r\n                }             \r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default chainsReducer; ","import {combineReducers} from 'redux';\r\nimport urlReducer from './url/url.reducer'; \r\nimport chainsReducer from './chains/chains.reducer';\r\nexport default combineReducers({\r\n    url:urlReducer,\r\n    chains:chainsReducer,\r\n})","import {createStore,applyMiddleware} from 'redux';\r\nimport logger from 'redux-logger';\r\nimport rootReducer from './root-reducer';\r\nconst middlewares=[logger];\r\n\r\nconst store=createStore(rootReducer,applyMiddleware(...middlewares));\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter }from 'react-router-dom';\nimport store from './redux/store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n \n  <React.StrictMode>\n     <Provider store={store}>\n       <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}